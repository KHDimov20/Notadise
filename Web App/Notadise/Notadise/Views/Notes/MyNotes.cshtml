@{
    ViewData["Title"] = "My Notes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-container">
    <!-- Main Content -->
    <div class="content">
        <!-- Header Section -->
        <div class="header">
            <!-- Search Bar -->
            <div class="search-bar">
                <input type="text" id="searchBar" class="search-input" placeholder="Search notes..." />
                <i class="fas fa-search search-icon"></i>
            </div>
            <!-- Logout Button -->
            <button class="logout-btn" onclick="redirectToLogin()">Log out</button>
        </div>

        <!-- Recent Notes -->
        <section class="recent-notes">
            <h1>Recent notes:</h1>
            <div class="filter-bar">
                <span class="filter-label">Filter: </span>
                <!-- Updated Filter Items -->
                <span class="filter-item" onclick="filterNotes('School')">School</span>
                <span class="filter-item" onclick="filterNotes('work')">Work</span>
                <span class="filter-item" onclick="filterNotes('university')">University</span>
                <span class="filter-item" onclick="filterNotes('art-projects')">Art Projects</span>
                <span class="filter-item" onclick="filterNotes('custom-categories')">Custom categories</span>
            </div>
            <br />
            <div class="notes-grid" id="notesGrid">
                <!-- Note cards will be dynamically populated -->
            </div>
        </section>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deletePrompt" class="delete-modal">
        <div class="delete-modal-content">
            <p>Are you sure you want to delete this note?</p>
            <div class="modal-buttons">
                <button onclick="confirmDelete()" class="confirm-btn">Yes, delete</button>
                <button onclick="closeDeletePrompt()" class="cancel-btn">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let noteToDeleteIndex = null;

        function loadNotes() {
            const savedNotes = JSON.parse(localStorage.getItem('savedNotes')) || [];
            console.log('Loaded Notes from localStorage:', savedNotes);

            const notesGrid = document.getElementById('notesGrid');
            notesGrid.innerHTML = '';

            if (savedNotes.length === 0) {
                const noNotesMessage = document.createElement('p');
                noNotesMessage.textContent = 'No notes available!';
                notesGrid.appendChild(noNotesMessage);
                return;
            }

            savedNotes.forEach((note, index) => {
                if (note && note.header) {
                    const noteCard = document.createElement('div');
                    noteCard.classList.add('note-card');
                    noteCard.setAttribute('data-index', index);

                    noteCard.innerHTML = `
                                <h3 class="note-title">${note.header}</h3>
                                <p class="note-text">${note.sections[0]?.text || 'No content available'}</p>
                                <button class="delete-btn" onclick="showDeletePrompt(${index})">Delete</button>
                            `;

                    noteCard.addEventListener('click', (event) => {
                        if (event.target.tagName !== 'BUTTON') {
                            editNote(index);
                        }
                    });

                    notesGrid.appendChild(noteCard);
                } else {
                    console.warn('Skipping invalid note:', note);
                }
            });
        }

        function showDeletePrompt(index) {
            noteToDeleteIndex = index;
            document.getElementById('deletePrompt').classList.add('show');
        }

        function confirmDelete() {
            let savedNotes = JSON.parse(localStorage.getItem('savedNotes')) || [];
            savedNotes.splice(noteToDeleteIndex, 1);
            localStorage.setItem('savedNotes', JSON.stringify(savedNotes));
            loadNotes();
            closeDeletePrompt();
        }

        function closeDeletePrompt() {
            document.getElementById('deletePrompt').classList.remove('show');
        }

        function editNote(index) {
            localStorage.setItem('editNoteIndex', index);
            window.location.href = "/Notes/NewNote";
        }

        function filterNotes(category) {
            // Redirect to specific pages based on the category
            if (category === 'School') {
                window.location.href = "/Notes/School";
            } else if (category === 'work') {
                window.location.href = "/Notes/Work";
            } else if (category === 'university') {
                window.location.href = "/Notes/University";
            } else if (category === 'art-projects') {
                window.location.href = "/Notes/ArtProjects";
            } else if (category === 'custom-categories') {
                window.location.href = "/Notes/CustomCategories";
            }
        }

        document.getElementById('searchBar').addEventListener('input', function () {
            const query = this.value.toLowerCase();
            const noteCards = document.querySelectorAll('.note-card');

            noteCards.forEach(card => {
                const title = card.querySelector('.note-title').textContent.toLowerCase();
                card.style.display = title.includes(query) ? 'block' : 'none';
            });
        });

        window.addEventListener('DOMContentLoaded', loadNotes);

        function redirectToLogin() {
            window.location.href = '/Identity/Account/Register';
        }
    </script>
}


<style>
    * {
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
    }

    body {
        display: flex;
        color: #333;
        background-color: #F5EDED;
    }

    .main-container {
        display: flex;
        width: 100%;
        min-height: 100vh;
        background-color: #F5EDED;
    }

    /* Main Content */
    .content {
        flex: 1;
        padding: 20px;
        background-color: #F5EDED;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #fff;
        height: 70px;
        padding-left: 20px;
        padding-right: 30px;
        border-radius: 10px;
    }

    .search-bar {
        display: flex;
        align-items: center;
        position: relative;
        color: #8A64AD;
    }

    .search-input {
        width: 300px;
        padding: 10px 15px;
        border-radius: 25px;
        border: 1px solid #ddd;
        color: #8A64AD;
        background-color: #F0F0F0;
    }

    .search-icon {
        position: absolute;
        right: 15px;
        font-size: 1rem;
        color: #8A64AD;
    }

    .logout-btn {
        background-color: #8A64AD;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
    }

        .logout-btn:hover {
            background-color: #6b4c8e;
        }

    /* Recent Notes Section */
    .recent-notes {
        background-color: #F5EDED;
        padding: 20px;
        border-radius: 15px;
    }

        .recent-notes h1 {
            font-size: 2.5rem;
            color: #7F92C3;
            font-weight: bold;
        }

    .filter-bar {
        margin: 10px 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .filter-label {
        font-weight: bold;
        color: #7F92C3;
    }

    .filter-item {
        background-color: #e5d8f2;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.9rem;
        cursor: pointer;
    }

        .filter-item:hover {
            background-color: #d1bee6;
        }

    /* Notes Grid */
    .notes-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
    }

    .note-card {
        background-color: #f8f9fa; /* Light background */
        border: 1px solid #ddd; /* Border for better visibility */
        border-radius: 8px; /* Rounded corners */
        padding: 16px; /* Space inside the card */
        margin: 16px; /* Space between cards */
        max-width: 300px;
        max-height: 300px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Subtle shadow effect */
        overflow: hidden; /* Prevent content from overflowing */
        text-overflow: ellipsis; /* Add ellipsis for long text */
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* Space between title and content */
    }

        .note-card h3 {
            font-size: 1rem;
            color: #8A64AD;
        }

        .note-card p {
            font-size: 0.85rem;
            color: #555;
        }

    .note-title {
        font-size: 18px;
        font-weight: bold;
        color: #6c63ff; /* Change to match your theme */
        margin-bottom: 8px;
        word-wrap: break-word; /* Ensure long words break into the next line */
    }

    .note-text {
        font-size: 14px;
        color: #333;
        line-height: 1.5;
        max-height: 100px; /* Limit the height for text content */
        overflow: hidden; /* Hide overflow text */
        text-overflow: ellipsis; /* Add ellipsis for truncated text */
        word-wrap: break-word; /* Ensure text doesn't break the container */
    }

    .delete-btn {
        margin-top: 8px;
        background-color: #8A64AD; /* Your button color */
        color: #fff;
        border: none;
        padding: 8px 12px;
        border-radius: 4px;
        cursor: pointer;
        align-self: flex-end; /* Align button to the bottom right */
    }

        .delete-btn:hover {
            background-color: #6c63ff;
        }

    /* Modal styling */
    .delete-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    }

        .delete-modal.show {
            display: flex;
        }

    .delete-modal-content {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
        max-width: 400px;
        width: 100%;
    }

        .delete-modal-content p {
            font-size: 1.1rem;
            margin-bottom: 20px;
        }

    .modal-buttons {
        display: flex;
        justify-content: center;
        gap: 10px;
    }

    .confirm-btn {
        padding: 10px 15px;
        background-color: #8A64AD;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
    }

        .confirm-btn:hover {
            background-color: #8A64AD;
        }

    .cancel-btn {
        padding: 10px 15px;
        background-color: #ddd;
        color: black;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
    }

        .cancel-btn:hover {
            background-color: #bbb;
        }
</style>
