@{
    ViewData["Title"] = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-container">
    <!-- Welcome Back Section -->
    <div class="header">
            <!-- Search Bar -->
            <div class="search-bar">
                <input type="text" id="searchBar" class="search-input" placeholder="Search notes..." />
                <i class="fas fa-search search-icon"></i>
            </div>
            <!-- Logout Button -->
            <button class="logout-btn" onclick="logout()">Log out</button>
        </div>

    <br />
    <br />
    <div class="welcome-section">
        <h1>Welcome Back</h1>
        <h3>Recommended: </h3>
        <div class="recommend-scroll">
            <div class="recommend-container">
                <!-- Example Recommended Note Card -->
                <div class="recommend-card">
                    <h3 class="recommend-title">School</h3>
                    <p class="recommend-content">
                        Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.
                    </p
                </div>
                <!-- Add more cards dynamically here -->
            </div>
        </div>
    </div>

    <!-- Quick Access Section -->
    <div id="quickAccessContainer" class="quick-access-container">
        <h2>Quick Access</h2>
        <div class="quick-access-buttons">
            <button class="filter-btn active" onclick="filterNotes('all')">All</button>
            <button class="filter-btn" onclick="filterNotes('recent')">Recent</button>
            <button class="filter-btn" onclick="filterNotes('shared')">Shared</button>
            <button class="filter-btn" onclick="filterNotes('favs')">Favs</button>
        </div>
        <div class="notes-container">
            <!-- Example Note Card -->
            <div class="note-card">
                <h3 class="note-title">Biology Class Notes</h3>
                <p class="note-meta">Yesterday 09:34 AM</p>
                <p class="note-shared">You shared with Notadise</p>
                <button class="star-btn" onclick="toggleFavourite(this)">⭐</button>
                <input type="checkbox" class="learned-checkbox" />
            </div>
            <!-- Add more cards dynamically here -->
        </div>
    </div>
</div>

@section Scripts {
<script>
        // Fetch and display Quick Access notes
        async function loadQuickAccessNotes() {
            let notes = JSON.parse(localStorage.getItem("savedNotes")) || [];
            console.log("Loaded notes from LocalStorage:", notes);

            const quickAccessContainer = document.getElementById("quickAccessContainer");
            quickAccessContainer.innerHTML = '';

            notes.forEach(note => {
                const lastEditedDate = new Date(note.lastEdited).toLocaleString();
                const noteCard = document.createElement('div');
                noteCard.classList.add('note-card');
                noteCard.innerHTML = `
                    <h3 class="note-title">${note.title}</h3>
                    <p class="note-meta">Last edited: ${lastEditedDate}</p>
                    <p class="note-category">Category: ${note.category}</p>
                `;
                quickAccessContainer.appendChild(noteCard);
            });
        }

        // Save a new note and reload Quick Access notes
        async function saveNote() {
            const title = document.getElementById('noteTitle').value;
            const content = document.getElementById('noteContent').value;
            const category = document.getElementById('noteCategory').value;

            try {
                const response = await fetch('/Notes/SaveNote', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ title, content, category })
                });

                if (response.ok) {
                    console.log('Note saved successfully!');
                    loadQuickAccessNotes(); // Refresh Quick Access notes
                } else {
                    console.error('Failed to save the note.');
                }
            } catch (error) {
                console.error('Error saving the note:', error);
            }
        }

        // Initialize Quick Access notes on page load
        window.addEventListener('DOMContentLoaded', () => {
            loadQuickAccessNotes();
        });
    </script>
}

<style>
    /* Global Styles */
    body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f7f3fd;
        color: #333;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #fff;
        height: 70px;
        padding-left: 20px;
        padding-right: 30px;
        border-radius: 10px;
    }

    .search-bar {
        display: flex;
        align-items: center;
        position: relative;
        color: #8A64AD;
    }

    .search-input {
        width: 300px;
        padding: 10px 15px;
        border-radius: 25px;
        border: 1px solid #ddd;
        color: #8A64AD;
        background-color: #F0F0F0;
    }

    .search-icon {
        position: absolute;
        right: 15px;
        font-size: 1rem;
        color: #8A64AD;
    }

    .logout-btn {
        background-color: #8A64AD;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
    }

        .logout-btn:hover {
            background-color: #6b4c8e;
        }


    .main-container {
        padding: 20px;
    }

    h1{
        color: #6a4baf;
        margin: 0;
        font-weight: bold;
    }

    h1, h3 {
        color: #6a4baf;
        margin: 0;
    }

    /* Welcome Section */
    .welcome-section {
        margin-bottom: 30px;
    }

        .welcome-section h1 {
            font-size: 2.5rem;
            margin-bottom: 15px;
        }

    .recommend-scroll {
        overflow-x: auto;
        display: flex;
        gap: 15px;
        padding: 10px 0;
    }

    .recommend-container {
        display: flex;
        gap: 20px;
    }

    .recommend-card {
        min-width: 200px;
        max-width: 250px;
        padding: 15px;
        border-radius: 10px;
        background-color: #e6e1f8;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        flex-shrink: 0;
        transition: transform 0.2s ease;
    }

        .recommend-card:hover {
            transform: translateY(-5px);
        }

    .recommend-title {
        font-size: 1.2rem;
        color: #6a4baf;
        margin-bottom: 10px;
    }

    .recommend-content {
        font-size: 0.9rem;
        color: #555;
    }

    /* Quick Access Section */
    .quick-access-section {
        margin-top: 30px;
    }

        .quick-access-section h2 {
            font-size: 2rem;
            margin-bottom: 20px;
        }

    .quick-access-buttons {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

    .filter-btn {
        padding: 10px 20px;
        border-radius: 20px;
        background-color: #d8cffe;
        color: #6a4baf;
        border: none;
        cursor: pointer;
        font-size: 0.9rem;
        transition: background-color 0.2s ease, color 0.2s ease;
    }

        .filter-btn:hover, .filter-btn.active {
            background-color: #6a4baf;
            color: #fff;
        }

    /* Notes Section */
    .notes-container {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .note-card {
        padding: 15px;
        border-radius: 10px;
        background-color: #fff;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        justify-content: space-between;
        transition: transform 0.2s ease;
    }

        .note-card:hover {
            transform: translateY(-5px);
        }

    .note-title {
        font-size: 1.1rem;
        color: #333;
        margin: 0;
    }

    .note-meta {
        font-size: 0.9rem;
        color: #888;
        margin-top: 5px;
    }

    .note-shared {
        font-size: 0.8rem;
        color: #6a4baf;
    }

    .star-btn {
        background: none;
        border: none;
        font-size: 1.2rem;
        color: #ffc107;
        cursor: pointer;
        margin-right: 15px;
        transition: transform 0.2s ease;
    }

        .star-btn:hover {
            transform: scale(1.2);
        }

    .learned-checkbox {
        width: 20px;
        height: 20px;
        cursor: pointer;
    }

    /* Scrollbar Styling */
    .recommend-scroll::-webkit-scrollbar {
        height: 8px;
    }

    .recommend-scroll::-webkit-scrollbar-thumb {
        background-color: #d8cffe;
        border-radius: 10px;
    }

    .recommend-scroll::-webkit-scrollbar-track {
        background-color: #f7f3fd;
    }
</style>
